<?xml version="1.0" encoding="UTF-8"?>
<jube>
  <benchmark name="titan_benchmark" outpath="bench_run">
    <comment>Benchmark for TITAN</comment>

    <!-- Configuration of input parameters -->
    <parameterset name="inputParameter">
      <parameter name="type" type="int" mode="python" update_mode="step">{"selfconsistency": 1, 
                                                                          "timepropagation": 11 }["$jube_step_name"]</parameter>
      <parameter name="options">createfolders positions ontheflysc eigenstates nojac</parameter>
      <parameter name="eta" type="float">1.e-3</parameter>
      <parameter name="kpoints" type="int" mode="python" update_mode="step">100000*${scaling_factor}</parameter>
      <parameter name="output_file">output/out_${type}_${eta}_${kpoints}</parameter>
      <parameter name="dim">3</parameter>
      <parameter name="nn_stages">2</parameter>
      <parameter name="soc">T</parameter>
      <parameter name="supercond">F</parameter>
      <parameter name="skipsc">T</parameter>
    </parameterset>

    <!-- Configuration of element parameters -->
    <parameterset name="elementParameter">
      <parameter name="element">Ni</parameter>
      <parameter name="uint" type="string">-0.09559 0.09559</parameter>
      <parameter name="soc_p" type="float">0.0000</parameter>
      <parameter name="soc_d" type="float">0.00978</parameter>
      <parameter name="lambda" type="float">0.0</parameter> <!-- If one lambda is used -->
      <parameter name="lambda_s" type="float">${lambda}</parameter>
      <parameter name="lambda_p" type="float">${lambda}</parameter>
      <parameter name="lambda_d" type="float">${lambda}</parameter>
      <parameter name="all_lambda">${lambda_s} ${lambda_p} ${lambda_d}</parameter>
    </parameterset>


    <!-- Compilation -->
    <step name="compile" suffix="${compiler}">
      <use from="compilation.xml">compilationParameter</use>
      <use from="compilation.xml" tag="compile">modules</use>
      <use from="system.xml" tag="compile">machineParameter</use>              <!-- use machine parameterset -->
      <use from="system.xml" tag="compile">executeset</use>
      <do tag="compile">${load_modules}</do>
      <do tag="compile">ml</do>
      <!-- patch for Jureca's GPUs -->
      <do tag="compile" work_dir="${folder}/build">rm -rf *</do>
      <do tag="compile" work_dir="${folder}/build">echo "cmake ../ -DPLATFORM=${machine} ${flags}"</do>
      <do tag="compile" work_dir="${folder}/build">cmake ../ -DPLATFORM=${machine} ${flags}</do>
      <do tag="compile" work_dir="${folder}/build">make -j 16</do>
      <do tag="!compile">echo "'compile' tag was not used. Skipping compilation for ${compiler}..."</do>
    </step>


    <!-- Self-consistency operation -->
    <step name="selfconsistency" depend="compile" tag="sc|time_prop">
      <!-- Defining variables -->
      <use from="system.xml">machineParameter</use>              <!-- use machine parameterset -->
      <use from="system.xml">parallelParameter</use>             <!-- use type of parallelization parameterset -->
      <use from="compilation.xml">compilationParameter</use>     <!-- use compilation parameterset -->
      <use from="compilation.xml">modules</use>                  <!-- use modules parameterset -->
      <use from="system.xml">executeset</use>                    <!-- use program parameterset -->

      <use from="system.xml">systemParameter</use>          <!-- use intranode parameterset -->

      <use>elementParameter</use>         <!-- use element parameterset -->
      <use>inputParameter</use>           <!-- use input parameterset -->
      <!-- Using files -->
      <use from="files.xml">input_files</use>                    <!-- use TITAN input fileset -->
      <use from="platform.xml">jobfiles</use>   <!-- use job files -->
      <!-- Making substitutions -->
      <use from="files.xml">inputSubstitutions</use>              <!-- use input substitutions -->
      <use from="files.xml">elementSubstitutions</use>            <!-- use element substitutions -->
      <use from="files.xml">basisSubstitutions</use>              <!-- use basis substitutions -->
      <use from="platform.xml">executesub</use>  <!-- use job substitutions -->
      <!-- Tasks -->
      <do>mkdir -p $(dirname $output_file)</do>  <!-- create output folder if necessary -->
      <do>$submit $submit_script</do>            <!-- Submitting job -->
      <do done_file="$done_file"></do>           <!-- Creating "done" file -->
    </step>

    <!-- Time Propagation Operation -->
    <step name="timepropagation" depend="selfconsistency"  tag="time_prop">
      <use from="system.xml">machineParameter</use>              <!-- use machine parameterset -->
      <use from="compilation.xml">compilationParameter</use>     <!-- use compilation parameterset -->
      <use from="compilation.xml">modules</use>                  <!-- use modules parameterset -->
      <use from="system.xml">executeset</use>               <!-- use program parameterset -->
      <use from="system.xml">parallelParameter</use>          <!-- use type of parallelization parameterset -->
      <use from="system.xml">systemParameter</use>          <!-- use intranode parameterset -->
      <use>elementParameter</use>         <!-- use element parameterset -->
      <use>inputParameter</use>           <!-- use input parameterset -->
      <!-- Using files -->
      <use from="files.xml">time_prop_files</use>
      <use from="files.xml">input_files</use>                    <!-- use TITAN input fileset -->
      <use from="platform.xml">jobfiles</use>   <!-- use job files -->
      <!-- Making substitutions -->
      <use from="files.xml">inputSubstitutions</use>              <!-- use input substitutions -->
      <use from="files.xml">elementSubstitutions</use>            <!-- use element substitutions -->
      <use from="files.xml">basisSubstitutions</use>              <!-- use basis substitutions -->
      <use from="platform.xml">executesub</use>  <!-- use job substitutions -->
      <do>$submit $submit_script</do>            <!-- Submitting job -->
      <do done_file="$done_file"></do>           <!-- Creating "done" file -->
    </step>

    <!-- Analyse -->
    <analyser name="analyse" reduce="false" tag="sc">
      <use from="pattern.xml">runtimePattern</use> <!-- use runtime patternset -->
      <use from="pattern.xml">resultsPattern</use> <!-- use results patternset -->
      <use from="pattern.xml">job_pat</use> <!-- use runtime patternset -->
      <analyse step="selfconsistency">
        <file>$output_file</file>
        <file>stdout</file>
      </analyse>
    </analyser>

    <!-- Analyse -->
    <analyser name="analyse" reduce="false" tag="time_prop">
      <use from="pattern.xml">runtimePattern</use> <!-- use runtime patternset -->
      <use from="pattern.xml">resultsPattern</use> <!-- use results patternset -->
      <use from="pattern.xml">job_pat</use> <!-- use runtime patternset -->
      <analyse step="timepropagation">
        <file>$output_file</file>
        <file>stdout</file>
      </analyse>
      <analyse step="timepropagation">
        <use from="pattern.xml">timepropPattern</use> <!-- use runtime patternset -->
        <file>${jube_wp_abspath}/results/TSOC/1Sites/time_propagation/occupation_efieldpulse_nkpt=10648_eta=1.0E-03_ev.dat</file>
      </analyse>
    </analyser>

    <!-- Create result table -->
    <result>
      <use>analyse</use> <!-- use existing analyser -->
      <table name="result" style="pretty" tag="!csv">
        <column>nodes</column>
        <column>parallel_type</column>
        <column title="Processes">mpi_processes</column>
        <column title="Threads">omp_threads</column>
        <column title="SOC">soc</column>
        <column title="U[Ry]">uint</column>
        <column title="eta[Ry]">eta</column>
        <column title="lambda[Ry]">lambda</column>
        <column title="M[muB]" format=".3f">mag</column>
        <column title="L[muB]" format=".3f">orb</column>
        <column>delta_d</column>
        <column>nkpt</column>
        <column tag="time_prop" format=".3e">time_last</column>
        <column>runtime</column>
        <column title="SC iterations" tag="sc">sc_iterations</column>
        <column title="TP iterations" tag="time_prop">timeprop_iterations</column>
        <column>status</column>
      </table>

      <table name="result-csv" style="csv" tag="csv">
        <column>nodes</column>
        <column>parallel_type</column>
        <column title="Processes">mpi_processes</column>
        <column title="Threads">omp_threads</column>
        <column title="SOC">soc</column>
        <column title="U[Ry]">uint</column>
        <column title="eta[Ry]">eta</column>
        <column title="lambda[Ry]">lambda</column>
        <column title="M[muB]" format=".3f">mag</column>
        <column title="L[muB]" format=".3f">orb</column>
        <column>delta_d</column>
        <column>nkpt</column>
        <column tag="time_prop">time</column>
        <column>runtime</column>
        <column title="SC iterations" tag="sc">sc_iterations</column>
        <column title="TP iterations" tag="time_prop">timeprop_iterations</column>
        <column>status</column>
      </table>
    </result>

  </benchmark>
</jube>
